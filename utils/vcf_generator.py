import logging
import os
from datetime import datetime
from database.connection import get_db
from database.users import get_user_submissions
from config import DOWNLOAD_CHANNEL

# Setup logging
logger = logging.getLogger(__name__)

def generate_vcf(group_id: str) -> str:
    """Generate a VCF file for the specified group and return the file path."""
    try:
        # Fetch watermark from config collection
        db = get_db()
        watermark_doc = db.config.find_one({"key": "watermark"})
        watermark = watermark_doc["value"] if watermark_doc else "Generated by WhatsApp Status Bot"

        # Fetch users in the group
        users = db.users.find({"group_id": group_id, "name": {"$exists": True}})
        user_list = list(users)
        if not user_list:
            logger.error(f"No users found for group {group_id}")
            return None

        # Create VCF content
        vcf_content = ""
        for user in user_list:
            name = user["name"].replace(";", "").replace("\n", "")  # Sanitize name
            number = user["number"].replace(" ", "").replace("-", "")  # Sanitize number
            vcf_content += (
                "BEGIN:VCARD\n"
                "VERSION:3.0\n"
                f"N:{name};;;\n"
                f"FN:{name}\n"
                f"TEL;TYPE=CELL:{number}\n"
                f"NOTE:{watermark}\n"
                "END:VCARD\n"
            )

        # Ensure data/temp_vcf directory exists
        os.makedirs("data/temp_vcf", exist_ok=True)

        # Generate file path
        timestamp = datetime.now().strftime("%Y%m%d%H%M%S")
        file_path = f"data/temp_vcf/{group_id}_{timestamp}.vcf"

        # Write VCF file
        with open(file_path, "w", encoding="utf-8") as f:
            f.write(vcf_content)
        
        logger.info(f"Generated VCF file for group {group_id} at {file_path}")
        return file_path
    except Exception as e:
        logger.error(f"Error generating VCF for group {group_id}: {e}")
        return None